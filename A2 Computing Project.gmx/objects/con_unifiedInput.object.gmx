<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
global.key_jump   = 8 ;
global.key_left   = 9 ;
global.key_right  = 10;
global.key_shoot  = 11;
global.key_pickup = 12;

input_gamepadGrid  = ds_grid_create(7, 127);
input_keyboardGrid = ds_grid_create(7, 127);

ini_open(working_directory + "player1.ini");
unifiedInput_add(1, global.key_jump  , ini_read_real("controls-keyboard", "key-jump"  , ord("W")), ini_read_real("controls-gamepad", "key-jump"   , gp_face1    ));
unifiedInput_add(1, global.key_left  , ini_read_real("controls-keyboard", "key-left"  , ord("A")), ini_read_real("controls-gamepad", "key-left"   , gp_padl     ));
unifiedInput_add(1, global.key_right , ini_read_real("controls-keyboard", "key-right" , ord("D")), ini_read_real("controls-gamepad", "key-right"  , gp_padr     ));
unifiedInput_add(1, global.key_shoot , ini_read_real("controls-keyboard", "key-shoot" , vk_space), ini_read_real("controls-gamepad", "key-shoot"  , gp_shoulderr));
unifiedInput_add(1, global.key_pickup, ini_read_real("controls-keyboard", "key-pickup", ord("E")), ini_read_real("controls-gamepad", "key-pickup" , gp_face2    ));
ini_close();

ini_open(working_directory + "player2.ini");
unifiedInput_add(2, global.key_jump  , ini_read_real("controls-keyboard", "key-jump"  , ord("Y")), ini_read_real("controls-gamepad", "key-jump"   , gp_face1    ));
unifiedInput_add(2, global.key_left  , ini_read_real("controls-keyboard", "key-left"  , ord("G")), ini_read_real("controls-gamepad", "key-left"   , gp_padl     ));
unifiedInput_add(2, global.key_right , ini_read_real("controls-keyboard", "key-right" , ord("J")), ini_read_real("controls-gamepad", "key-right"  , gp_padr     ));
unifiedInput_add(2, global.key_shoot , ini_read_real("controls-keyboard", "key-shoot" , ord("K")), ini_read_real("controls-gamepad", "key-shoot"  , gp_shoulderr));
unifiedInput_add(2, global.key_pickup, ini_read_real("controls-keyboard", "key-pickup", ord("U")), ini_read_real("controls-gamepad", "key-pickup" , gp_face2    ));
ini_close();

ini_open(working_directory + "player3.ini");
unifiedInput_add(3, global.key_jump  , ini_read_real("controls-keyboard", "key-jump"  , vk_up       ), ini_read_real("controls-gamepad", "key-jump"   , gp_face1    ));
unifiedInput_add(3, global.key_left  , ini_read_real("controls-keyboard", "key-left"  , vk_left     ), ini_read_real("controls-gamepad", "key-left"   , gp_padl     ));
unifiedInput_add(3, global.key_right , ini_read_real("controls-keyboard", "key-right" , vk_right    ), ini_read_real("controls-gamepad", "key-right"  , gp_padr     ));
unifiedInput_add(3, global.key_shoot , ini_read_real("controls-keyboard", "key-shoot" , vk_enter    ), ini_read_real("controls-gamepad", "key-shoot"  , gp_shoulderr));
unifiedInput_add(3, global.key_pickup, ini_read_real("controls-keyboard", "key-pickup", vk_backspace), ini_read_real("controls-gamepad", "key-pickup" , gp_face2    ));
ini_close();

ini_open(working_directory + "player4.ini");
unifiedInput_add(4, global.key_jump  , ini_read_real("controls-keyboard", "key-jump"  , vk_numpad8 ), ini_read_real("controls-gamepad", "key-jump"   , gp_face1    ));
unifiedInput_add(4, global.key_left  , ini_read_real("controls-keyboard", "key-left"  , vk_numpad4 ), ini_read_real("controls-gamepad", "key-left"   , gp_padl     ));
unifiedInput_add(4, global.key_right , ini_read_real("controls-keyboard", "key-right" , vk_numpad6 ), ini_read_real("controls-gamepad", "key-right"  , gp_padr     ));
unifiedInput_add(4, global.key_shoot , ini_read_real("controls-keyboard", "key-shoot" , vk_subtract), ini_read_real("controls-gamepad", "key-shoot"  , gp_shoulderr));
unifiedInput_add(4, global.key_pickup, ini_read_real("controls-keyboard", "key-pickup", vk_add     ), ini_read_real("controls-gamepad", "key-pickup" , gp_face2    ));
ini_close();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
